<main class="main-content">
    <header class="content-header">
        <div class="breadcrumb">
            <span><a href="/admin">Admin</a> / </span><span><a href="/admin/produtos">Produtos</a> / </span><span class="current">Criar novo</span>
        </div>
    </header>

    <section class="content-form-section">
        <div class="form-header">
            <h1>Criar novo produto</h1>
        </div>
        
        <div id="formMessages"></div>
        
        <% if (!empresas || empresas.length === 0) { %>
            <div class="alert alert-warning">
                <p>Não é possível criar produtos pois não existem empresas cadastradas.</p>
                <p>Por favor, <a href="/admin/empresas/criar" class="alert-link">crie uma empresa</a> primeiro.</p>
            </div>
        <% } else { %>
            <form id="productForm" class="product-form" enctype="multipart/form-data">
                <div class="form-group">
                    <label for="name">Nome <span class="required">*</span></label>
                    <input type="text" id="name" name="name" required>
                </div>

                <div class="form-group">
                    <label for="empresaId">Empresa <span class="required">*</span></label>
                    <div class="custom-select-wrapper">
                        <select id="empresaId" name="empresaId" required>
                            <option value="">Selecione uma empresa</option>
                            <% empresas.forEach(empresa => { %>
                                <option value="<%= empresa.id %>"><%= empresa.razaoSocial %></option>
                            <% }); %>
                        </select>
                        <i class="fas fa-chevron-down select-arrow"></i>
                    </div>
                </div>

                <div id="restOfForm" style="display: none;">
                    <div class="form-group">
                        <label for="categoryId">Categoria <span class="required">*</span></label>
                        <div class="custom-select-wrapper">
                            <select id="categoryId" name="categoryId" required>
                                <option value="">Primeiro selecione uma empresa</option>
                            </select>
                            <i class="fas fa-chevron-down select-arrow"></i>
                        </div>
                    </div>

                    <div id="noCategoriesAlert" class="alert alert-warning" style="display: none;">
                        <p>Essa empresa não possui categorias cadastradas.</p>
                        <p>Por favor, crie uma categoria primeiro.</p>
                    </div>

                    <div id="formFields" style="display: none;">
                        <div class="form-group">
                            <label for="descricao">Descrição <span class="required">*</span></label>
                            <textarea id="descricao" name="descricao" rows="6" required></textarea>
                        </div>

                        <div class="form-group">
                            <label for="produtoImagem">Imagem</label>
                            <div class="file-dropzone" id="imageDropzone">
                                <i class="fas fa-cloud-upload-alt dropzone-icon"></i>
                                <p>Arraste o arquivo aqui ou clique para navegar</p>
                                <span>Tamanho máximo: 5MB</span>
                                <span>Suporta: image/png, image/jpeg, image/jpg</span>
                                <input type="file" id="produtoImagem" name="produtoImagem" class="file-input-hidden" accept="image/png, image/jpeg, image/jpg">
                            </div>
                            <div id="imagePreviewContainer" class="image-preview-container" style="display: none;">
                                <img id="imagePreview" src="" alt="Preview da imagem">
                                <button type="button" id="removeImage" class="btn-remove-image"><i class="fas fa-times"></i></button>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="preco">Preço <span class="required">*</span></label>
                            <input type="number" id="preco" name="preco" step="0.01" min="0" required>
                        </div>

                        <div class="form-group">
                            <label for="boolPromo">Em Promoção?</label>
                            <div class="custom-select-wrapper">
                                <select id="boolPromo" name="boolPromo">
                                    <option value="false">Não</option>
                                    <option value="true">Sim</option>
                                </select>
                                <i class="fas fa-chevron-down select-arrow"></i>
                            </div>
                        </div>

                        <div class="form-group hidden-field" id="discount-form-group">
                            <label for="desconto">Desconto (%)</label>
                            <input type="number" id="desconto" name="desconto" step="1" min="0" max="100">
                        </div>

                        <div class="form-group">
                            <label for="estoque">Estoque <span class="required">*</span></label>
                            <input type="number" id="estoque" name="estoque" min="0" required>
                        </div>

                        <div class="form-group">
                            <label for="codBarra">Cód. Barras (opcional)</label>
                            <input type="text" id="codBarra" name="codBarra">
                            <small class="form-helper-text">Deixe em branco para cadastrar sem código de barras</small>
                        </div>
                    </div>

                    <div class="form-actions">
                        <a href="/admin/produtos" class="btn btn-secondary"><i class="fas fa-arrow-left"></i> Voltar</a>
                        <button type="submit" class="btn btn-primary btn-save"><i class="fas fa-save"></i> Salvar</button>
                    </div>
                </div>
            </form>
        <% } %>
    </section>
</main>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Controle de visibilidade do campo de desconto
        const promoSelect = document.getElementById('boolPromo');
        const discountGroup = document.getElementById('discount-form-group');

        function toggleDiscountField() {
            if (promoSelect.value === 'true') {
                discountGroup.classList.remove('hidden-field');
            } else {
                discountGroup.classList.add('hidden-field');
                document.getElementById('desconto').value = '';
            }
        }

        // Estado inicial
        if (promoSelect) {
            toggleDiscountField();
            // Event listener
            promoSelect.addEventListener('change', toggleDiscountField);
        }

        // Configuração do Dropzone para upload de imagem
        const dropzone = document.querySelector('.file-dropzone');
        const fileInput = document.getElementById('produtoImagem');
        const imagePreviewContainer = document.getElementById('imagePreviewContainer');
        const imagePreview = document.getElementById('imagePreview');
        const removeImageBtn = document.getElementById('removeImage');

        function handleFileSelect(file) {
            if (file && file.type.match('image.*')) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    imagePreview.src = e.target.result;
                    dropzone.style.display = 'none';
                    imagePreviewContainer.style.display = 'block';
                };
                reader.readAsDataURL(file);
            }
        }

        if (dropzone) {
            dropzone.addEventListener('click', () => {
                fileInput.click();
            });

            dropzone.addEventListener('dragover', (event) => {
                event.preventDefault();
                dropzone.classList.add('dragging');
            });

            dropzone.addEventListener('dragleave', () => {
                dropzone.classList.remove('dragging');
            });

            dropzone.addEventListener('drop', (event) => {
                event.preventDefault();
                dropzone.classList.remove('dragging');
                const files = event.dataTransfer.files;
                if (files.length > 0) {
                    fileInput.files = files;
                    handleFileSelect(files[0]);
                }
            });

            fileInput.addEventListener('change', (event) => {
                if (event.target.files.length > 0) {
                    handleFileSelect(event.target.files[0]);
                }
            });

            removeImageBtn.addEventListener('click', () => {
                fileInput.value = '';
                imagePreview.src = '';
                imagePreviewContainer.style.display = 'none';
                dropzone.style.display = 'block';
            });
        }

        // Carregar categorias com base na empresa selecionada
        const empresaSelect = document.getElementById('empresaId');
        const restOfForm = document.getElementById('restOfForm');
        const formFields = document.getElementById('formFields');
        const noCategoriesAlert = document.getElementById('noCategoriesAlert');
        const categoriaSelect = document.getElementById('categoryId');

        empresaSelect.addEventListener('change', async function() {
            const empresaId = this.value;
            
            if (!empresaId) {
                restOfForm.style.display = 'none';
                return;
            }
            
            restOfForm.style.display = 'block';
            categoriaSelect.innerHTML = '<option value="">Carregando categorias...</option>';
            
            try {
                const response = await fetch(`/admin/categorias/${empresaId}`);
                const categorias = await response.json();
                
                if (categorias.length === 0) {
                    noCategoriesAlert.style.display = 'block';
                    formFields.style.display = 'none';
                    categoriaSelect.innerHTML = '<option value="">Nenhuma categoria disponível</option>';
                } else {
                    noCategoriesAlert.style.display = 'none';
                    formFields.style.display = 'block';
                    categoriaSelect.innerHTML = '<option value="">Selecione uma categoria</option>';
                    categorias.forEach(cat => {
                        const option = document.createElement('option');
                        option.value = cat.id;
                        option.textContent = cat.name;
                        categoriaSelect.appendChild(option);
                    });
                }
            } catch (error) {
                console.error('Erro ao carregar categorias:', error);
                categoriaSelect.innerHTML = '<option value="">Erro ao carregar categorias</option>';
                noCategoriesAlert.style.display = 'none';
                formFields.style.display = 'none';
            }
        });

        // Submissão do formulário via AJAX
        const productForm = document.getElementById('productForm');
        const formMessages = document.getElementById('formMessages');

        if (productForm) {
            productForm.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                // Validação do formulário
                const requiredFields = productForm.querySelectorAll('[required]');
                let isValid = true;
                
                requiredFields.forEach(field => {
                    if (!field.value.trim()) {
                        isValid = false;
                        field.classList.add('error-field');
                    } else {
                        field.classList.remove('error-field');
                    }
                });
                
                if (!isValid) {
                    showMessage('Por favor, preencha todos os campos obrigatórios.', 'error');
                    return;
                }
                
                // Criar o FormData antes de manipular os valores
                const formData = new FormData(productForm);
                
                // Tratar campo código de barras vazio - remover do formData se estiver vazio
                const codBarraInput = document.getElementById('codBarra');
                if (!codBarraInput.value.trim()) {
                    formData.delete('codBarra');
                }
                
                try {
                    // Adicionar um indicador visual de carregamento
                    const saveBtn = document.querySelector('.btn-save');
                    if (saveBtn) {
                        saveBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Salvando...';
                        saveBtn.disabled = true;
                    }
                    
                    // Enviar dados via AJAX
                    const response = await fetch('/admin/produto', {
                        method: 'POST',
                        body: formData
                    });
                    
                    // Verificar status de resposta HTTP
                    if (!response.ok) {
                        throw new Error(`Erro HTTP: ${response.status}`);
                    }
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        showMessage(result.message, 'success');
                        // Redirecionar após 2 segundos
                        setTimeout(() => {
                            window.location.href = '/admin/produtos';
                        }, 2000);
                    } else {
                        showMessage(result.message || 'Erro ao criar produto', 'error');
                        if (saveBtn) {
                            saveBtn.innerHTML = '<i class="fas fa-save"></i> Salvar';
                            saveBtn.disabled = false;
                        }
                    }
                } catch (error) {
                    console.error('Erro ao enviar formulário:', error);
                    showMessage('Erro ao enviar formulário: ' + error.message, 'error');
                    
                    // Restaurar o botão
                    const saveBtn = document.querySelector('.btn-save');
                    if (saveBtn) {
                        saveBtn.innerHTML = '<i class="fas fa-save"></i> Salvar';
                        saveBtn.disabled = false;
                    }
                }
            });
        }
        
        function showMessage(message, type) {
            if (formMessages) {
                formMessages.innerHTML = `<div class="alert alert-${type}">${message}</div>`;
                formMessages.scrollIntoView({ behavior: 'smooth' });
                
                // Limpar mensagem após 5 segundos
                setTimeout(() => {
                    formMessages.innerHTML = '';
                }, 5000);
            }
        }
    });
</script>
